{"version":3,"sources":["../../../../assets/scripts/assets/scripts/playerDataSys.js"],"names":["playerDataSys","initPlayerData","successCallBack","paras","networkMgrNode","cc","find","networkMgr","getComponent","ipconfig","json","ip","port","url","dataCenter","require","playerId1","playerData","id","console","log","message","playerId","JSON","stringify","sendMessageToServer","initPlayerDataGetResponseCallBack","xhr","others","responseText","parse","neededFishesData","callBack","updatePlayerData","datasForChange","updatePlayerDataSuccessCallBack","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,gBAAgB;AAEhBC,kBAFgB,0BAEDC,eAFC,EAEeC,KAFf,EAEsB;AAClC,YAAIC,iBAAiBC,GAAGC,IAAH,CAAQ,gBAAR,CAArB;AACA,YAAIC,aAAaH,eAAeI,YAAf,CAA4B,YAA5B,CAAjB;AACA,YAAIC,WAAWF,WAAWE,QAAX,CAAoBC,IAAnC;AACA,YAAIC,KAAKF,SAASE,EAAlB;AACA,YAAIC,OAAOH,SAASG,IAApB;;AAEA,YAAIC,MAAM,YAAYF,EAAZ,GAAiB,GAAjB,GAAuBC,IAAvB,GAA8B,cAAxC;AACA,YAAIE,aAAaC,QAAQ,YAAR,CAAjB;AACA,YAAIC,YAAYF,WAAWG,UAAX,CAAsBC,EAAtC;AACA,YAAI,CAACF,SAAL,EAAgB;AACZG,oBAAQC,GAAR,CAAY,+CAAZ;AACA;AACH;;AAED,YAAIC,UAAU;AACVC,sBAAUR,WAAWG,UAAX,CAAsBC;AADtB,SAAd;AAGAG,kBAAUE,KAAKC,SAAL,CAAeH,OAAf,CAAV;AACA;AACAd,mBAAWkB,mBAAX,CAA+Bb,IAA/B,EAAoCC,GAApC,EAAwCQ,OAAxC,EAAgD,KAAKK,iCAArD,EAAuF,YAAU,CAAE,CAAnG,EAAoG,CAACxB,eAAD,EAAiBC,KAAjB,CAApG;AACH,KAvBe;AAwBhBuB,qCAxBgB,6CAwBkBC,GAxBlB,EAwBsBC,MAxBtB,EAwB6B;AACzC,YAAIX,aAAaU,IAAIE,YAArB;AACAZ,qBAAaM,KAAKO,KAAL,CAAWb,UAAX,CAAb;AACA,YAAIH,aAAaC,QAAQ,YAAR,CAAjB;AACA;AACAD,mBAAWG,UAAX,GAAwBA,WAAWA,UAAnC;AACAH,mBAAWiB,gBAAX,GAA8Bd,WAAWc,gBAAzC;;AAEA,YAAIC,WAAWJ,OAAO,CAAP,CAAf;AACA,YAAIzB,QAAQyB,OAAO,CAAP,CAAZ;AACAI,iBAAS7B,KAAT;AACH,KAnCe;AAoChB8B,oBApCgB,8BAoCE;AACd,YAAI7B,iBAAiBC,GAAGC,IAAH,CAAQ,gBAAR,CAArB;AACA,YAAIC,aAAaH,eAAeI,YAAf,CAA4B,YAA5B,CAAjB;AACA,YAAIC,WAAWF,WAAWE,QAAX,CAAoBC,IAAnC;AACA,YAAIC,KAAKF,SAASE,EAAlB;AACA,YAAIC,OAAOH,SAASG,IAApB;;AAEA,YAAIC,MAAM,YAAYF,EAAZ,GAAiB,GAAjB,GAAuBC,IAAvB,GAA8B,mBAAxC;AACA,YAAIE,aAAaC,QAAQ,YAAR,CAAjB;AACA,YAAIO,WAAWR,WAAWG,UAAX,CAAsBC,EAArC;AACA,YAAI,CAACI,QAAL,EAAe;AACXH,oBAAQC,GAAR,CAAY,iDAAZ;AACA;AACH;;AAED,YAAIC,UAAU;AACVa,4BAAgBpB,WAAWG;AADjB,SAAd;AAGAI,kBAAUE,KAAKC,SAAL,CAAeH,OAAf,CAAV;AACAd,mBAAWkB,mBAAX,CAA+Bb,IAA/B,EAAoCC,GAApC,EAAwCQ,OAAxC,EAAgD,KAAKc,+BAArD;AACH,KAxDe;AAyDhBA,mCAzDgB,2CAyDgBR,GAzDhB,EAyDoBC,MAzDpB,EAyD4B,CAE3C;AA3De,CAApB;;AA8DAQ,OAAOC,OAAP,GAAiBrC,aAAjB","file":"playerDataSys.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar playerDataSys = {\n    \n    initPlayerData(successCallBack,paras) {\n        var networkMgrNode = cc.find(\"networkMgrNode\");\n        var networkMgr = networkMgrNode.getComponent(\"networkMgr\");\n        var ipconfig = networkMgr.ipconfig.json;\n        var ip = ipconfig.ip;\n        var port = ipconfig.port;\n\n        var url = \"http://\" + ip + \":\" + port + \"/getinitdata\";\n        var dataCenter = require(\"dataCenter\");\n        var playerId1 = dataCenter.playerData.id;\n        if (!playerId1) {\n            console.log(\"init player data erro: there isn't a playerID\");\n            return\n        }\n\n        var message = {\n            playerId: dataCenter.playerData.id\n        }\n        message = JSON.stringify(message);\n        // networkMgr.sendMessageToServer(port,url,message,this.initPlayerDataGetResponseCallBack,others = [successCallBack]);\n        networkMgr.sendMessageToServer(port,url,message,this.initPlayerDataGetResponseCallBack,function(){},[successCallBack,paras]);\n    },\n    initPlayerDataGetResponseCallBack(xhr,others){\n        var playerData = xhr.responseText;\n        playerData = JSON.parse(playerData);\n        var dataCenter = require(\"dataCenter\");\n        //dataCenter.playerData = null;\n        dataCenter.playerData = playerData.playerData;\n        dataCenter.neededFishesData = playerData.neededFishesData;\n        \n        var callBack = others[0];\n        var paras = others[1];\n        callBack(paras);\n    },\n    updatePlayerData(){\n        var networkMgrNode = cc.find(\"networkMgrNode\");\n        var networkMgr = networkMgrNode.getComponent(\"networkMgr\");\n        var ipconfig = networkMgr.ipconfig.json;\n        var ip = ipconfig.ip;\n        var port = ipconfig.port;\n\n        var url = \"http://\" + ip + \":\" + port + \"/updateplayerdata\";\n        var dataCenter = require(\"dataCenter\");\n        var playerId = dataCenter.playerData.id;\n        if (!playerId) {\n            console.log(\"update player data erro: there isn't a playerID\");\n            return\n        }\n        \n        var message = {\n            datasForChange: dataCenter.playerData\n        }\n        message = JSON.stringify(message);\n        networkMgr.sendMessageToServer(port,url,message,this.updatePlayerDataSuccessCallBack);\n    },\n    updatePlayerDataSuccessCallBack(xhr,others) {\n\n    }\n}\n\nmodule.exports = playerDataSys"]}