{"version":3,"sources":["gameMgr.js"],"names":["cc","Class","extends","Component","properties","dataCenter","default","visible","fishesNode","Node","catchFishNode","gotFishesNode","dollorLabel","Label","background","catchFishNodeOriginPosition","backgroundColors","Color","gradients","SpriteFrame","moveDuration","catchedFishAnimTime","addDollorLabelAnimTime","addDollorLabelAnimMoveUpDistance","_intervalProcesses","onLoad","require","getPosition","color","playerData","currentAreaLevel","openTouchEvent","startRefreshFishes","updateDollorLabelStr","start","update","dt","fishesOnScreen","children","helper","index","oneFishOnScreen","isOneNodeInAnotherNode","fishMgr","getComponent","fishData","fishPosition","networkMgr","find","message","type","fishId","JSON","stringify","sendMessageToServer","removeFromParent","self","loader","loadRes","fishModelName","err","catchedFishPrefab","catchedFish","instantiate","position","catchedFishTargetPosition","v2","jumpAction","jumpTo","scalUpAction","scaleTo","scalDownAction","scalAction","sequence","removeSelf","catchedFishAction","spawn","turnOneNodeToOnePosition","addChild","runAction","addDollorLabelPrefab","addDollorLabelNode","addDollorLabel","string","currentDollor","toString","fadeAction","fadeOut","labelAction","upAction","moveBy","finalAction","onDestroy","closeTouchEvent","node","on","touchBegan","touchMoved","touchEnd","touchCancel","off","event","x","getLocationX","y","getLocationY","location","convertToNodeSpaceAR","setPosition","motionComponent","MotionStreak","enabled","motion","element","neededFishesData","tempFunc","para","process","setInterval","refreshOneFishByFishData","timeDelta","push","stopRefreshFishes","clearInterval","probability","isHittedByProbability","fishPrefab","newFish","spawnAreaNum","Math","random","floor","targetAreaNum","getTargetAreaNumBySpawnAreaNum","spawnPosition","getOneRandomPositionBySpawnArea","targetPosition","swimLeft","rotateBy","leftBack","swimRight","rightBack","swimAction","swimAnimation","repeatForever","moveAction","moveTo","fishAction","givenNum","target","givenNode","spawnX","spawnY","width","height","strForLabel","formatNumberShowStyle","changeArea","areaIdForChange","areaId","onReceiveMessage","data","removeAllChildren","othersData","nextBackground","getContentSize","nodes","a","zIndex","finished","callFunc"],"mappings":"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","file":"gameMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        dataCenter: {\n            default: null,\n            visible: false\n        },\n\n        fishesNode: cc.Node,\n        catchFishNode: cc.Node,\n        gotFishesNode: cc.Node,\n        dollorLabel: cc.Label,\n        background: cc.Node,\n\n        catchFishNodeOriginPosition: {\n            default: null,\n            visible: false\n        },\n        backgroundColors: [cc.Color],\n        gradients: [cc.SpriteFrame],\n        moveDuration: 5,\n        catchedFishAnimTime:0.5,\n        addDollorLabelAnimTime: 0.5,\n        addDollorLabelAnimMoveUpDistance: 50,\n\n        _intervalProcesses: []\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.dataCenter = require(\"dataCenter\");\n        var dataCenter = require(\"dataCenter\");\n        this.catchFishNodeOriginPosition = this.catchFishNode.getPosition();\n        this.background.color = this.backgroundColors[dataCenter.playerData.currentAreaLevel - 1];\n        this.openTouchEvent();\n        this.startRefreshFishes();\n        this.updateDollorLabelStr();\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        //check whether the catchfish node is in one fish node\n        var fishesOnScreen = this.fishesNode.children;\n        var helper = require(\"helper\");\n        for (var index in fishesOnScreen) {\n            var oneFishOnScreen = fishesOnScreen[index];\n            if (helper.isOneNodeInAnotherNode(this.catchFishNode,oneFishOnScreen) == true) {\n                var fishMgr = oneFishOnScreen.getComponent(\"fishMgr\");\n                var fishData = fishMgr.fishData;\n                var fishPosition = oneFishOnScreen.getPosition();\n\n                //add dollor\n                var networkMgr = cc.find(\"networkMgrNode\").getComponent(\"networkMgr\");\n                var message = {\n                    type: \"catchFish\",\n                    fishId: fishData.fishId\n                }\n                message = JSON.stringify(message);\n                networkMgr.sendMessageToServer(message);\n\n                //remove the fish\n                oneFishOnScreen.removeFromParent();\n                //one new fish for animation of catched fish\n                var self = this;\n                cc.loader.loadRes(fishData.fishModelName,function(err,catchedFishPrefab){\n                    if(err){\n                        return\n                    }\n                    var catchedFish = cc.instantiate(catchedFishPrefab); \n                    catchedFish.position = fishPosition;\n                    \n                    var catchedFishTargetPosition = cc.v2(0,-151);\n                    var jumpAction = cc.jumpTo(self.catchedFishAnimTime,catchedFishTargetPosition,50,1);\n                    var scalUpAction = cc.scaleTo(0.3 * self.catchedFishAnimTime,1.5,1.5);\n                    var scalDownAction = cc.scaleTo(0.7 * self.catchedFishAnimTime,0.5,0.5);\n                    var scalAction = cc.sequence(scalUpAction,scalDownAction,cc.removeSelf());\n                    var catchedFishAction = cc.spawn(jumpAction,scalAction);\n                    \n\n                    helper.turnOneNodeToOnePosition(catchedFish,catchedFishTargetPosition);\n                    self.gotFishesNode.addChild(catchedFish);\n                    catchedFish.runAction(catchedFishAction);\n\n                    cc.loader.loadRes(\"addDollorLabel\",function(err,addDollorLabelPrefab){\n                        var addDollorLabelNode = cc.instantiate(addDollorLabelPrefab);\n                        var addDollorLabel = addDollorLabelNode.getComponent(cc.Label);\n                        addDollorLabel.string = \"+ $ \" + fishData.currentDollor.toString();\n                        addDollorLabelNode.position = catchedFish.position;\n                        self.gotFishesNode.addChild(addDollorLabelNode);\n\n                        var fadeAction = cc.fadeOut(self.addDollorLabelAnimTime);\n                        var labelAction = cc.sequence(fadeAction,cc.removeSelf());\n                        var upAction = cc.moveBy(self.addDollorLabelAnimTime,cc.v2(0,self.addDollorLabelAnimMoveUpDistance));\n                        var finalAction = cc.spawn(labelAction,upAction)\n                        addDollorLabelNode.runAction(finalAction);\n                    });\n                    \n                })\n            }\n        }\n    },\n    onDestroy(){\n        this.closeTouchEvent();\n    },\n\n    openTouchEvent() {\n        this.node.on(\"touchstart\",this.touchBegan,this);\n        this.node.on(\"touchmove\",this.touchMoved,this);\n        this.node.on(\"touchend\",this.touchEnd,this);\n        this.node.on(\"touchcancel\",this.touchCancel,this);\n    },\n    closeTouchEvent(){\n        this.node.off(\"touchstart\",this.touchBegan,this);\n        this.node.off(\"touchmove\",this.touchMoved,this);\n        this.node.off(\"touchend\",this.touchEnd,this);\n        this.node.off(\"touchcancel\",this.touchCancel,this); \n    },  \n    touchBegan(event){\n        var x = event.getLocationX();\n        var y = event.getLocationY();\n        var location = this.node.convertToNodeSpaceAR(cc.v2(x,y));\n\n        this.catchFishNode.setPosition(location.x,location.y);\n        var motionComponent = this.catchFishNode.getComponent(cc.MotionStreak);\n        motionComponent.enabled = true;\n\n    },\n    touchMoved(event){\n        var x = event.getLocationX();\n        var y = event.getLocationY();\n        var location = this.node.convertToNodeSpaceAR(cc.v2(x,y));\n        this.catchFishNode.setPosition(location.x,location.y);\n    },\n    touchEnd(event){\n        var motion = this.catchFishNode.getComponent(cc.MotionStreak);\n        motion.enabled = false;\n        this.catchFishNode.setPosition(this.catchFishNodeOriginPosition);\n\n    },\n    touchCancel(event){\n        this.touchEnd();\n    }, \n\n    startRefreshFishes(){\n\n        var self = this;\n        var dataCenter = require(\"dataCenter\");\n        for(var element in dataCenter.neededFishesData) {\n            var fishData = dataCenter.neededFishesData[element];\n\n            var tempFunc = function(para){\n                var process = setInterval(function(){\n                    self.refreshOneFishByFishData(para);\n                },(para.timeDelta * 1000 ));\n                self._intervalProcesses.push(process);\n            };\n            tempFunc(fishData);    \n        }\n    },\n\n    stopRefreshFishes(){\n        for (var index in this._intervalProcesses) {\n            clearInterval(this._intervalProcesses[index]);\n        }\n    },\n\n    refreshOneFishByFishData(fishData) {\n        var probability = fishData.probability;\n        var helper = require(\"helper\");\n        if(helper.isHittedByProbability(probability,10000) == false) {\n            return\n        }\n        var self = this;\n        cc.loader.loadRes(fishData.fishModelName,function(err,fishPrefab){\n            var newFish = cc.instantiate(fishPrefab);\n            var spawnAreaNum = Math.random() * 4;\n            spawnAreaNum = Math.floor(spawnAreaNum);\n            var targetAreaNum = self.getTargetAreaNumBySpawnAreaNum(spawnAreaNum);\n\n            var spawnPosition = self.getOneRandomPositionBySpawnArea(spawnAreaNum,newFish,self.node);\n            newFish.setPosition(spawnPosition);\n            self.fishesNode.addChild(newFish);\n            var fishMgr = newFish.getComponent(\"fishMgr\");\n            fishMgr.fishData = fishData;\n\n            var targetPosition = self.getOneRandomPositionBySpawnArea(targetAreaNum,newFish,self.node);\n            helper.turnOneNodeToOnePosition(newFish,targetPosition);\n\n            var swimLeft = cc.rotateBy(0.5,30);\n            var leftBack = cc.rotateBy(0.5, -30);\n            var swimRight = cc.rotateBy(0.5, -30);\n            var rightBack = cc.rotateBy(0.5, 30);\n            var swimAction = cc.sequence(swimLeft, leftBack, swimRight, rightBack);\n            var swimAnimation = cc.repeatForever(swimAction);\n            newFish.runAction(swimAnimation);\n\n            var moveAction = cc.moveTo(self.moveDuration,targetPosition);\n            var fishAction = cc.sequence(moveAction,cc.removeSelf());\n            newFish.runAction(fishAction);\n        });\n    },\n    getTargetAreaNumBySpawnAreaNum(givenNum) {\n        var target = null;\n        switch(givenNum) {\n            case 0:\n                target = 1;\n                break;\n            case 1:\n                target = 0;\n                break;\n            case 2:\n                target = 3;\n                break;\n            case 3:\n                target = 2;\n                break;\n        }\n        return target;\n    },\n    getOneRandomPositionBySpawnArea(spawnAreaNum,newFish,givenNode){\n        var spawnX = null;\n        var spawnY = null;\n\n        if(spawnAreaNum == 0) {\n             spawnX = -1 * givenNode.width/2 - newFish.width/2;\n             spawnY = Math.random() * givenNode.height - givenNode.height/2;\n        }\n        else if(spawnAreaNum == 1){\n            spawnX = givenNode.width/2 + newFish.width/2;\n            spawnY = Math.random() * givenNode.height - givenNode.height/2;\n        }\n        else if(spawnAreaNum == 2) {\n            spawnY = givenNode.height/2 + newFish.height/2;\n            spawnX = Math.random() * givenNode.width - givenNode.width/2;\n        }\n        else if(spawnAreaNum == 3) {\n            spawnY = -givenNode.height/2 - newFish.height/2;\n            spawnX = Math.random() * givenNode.width - givenNode.width/2;\n        }\n        return cc.v2(spawnX,spawnY);\n    },\n    updateDollorLabelStr(){\n        var helper = require(\"helper\");\n        var dataCenter = require(\"dataCenter\");\n        var currentDollor = dataCenter.playerData.currentDollor;\n        var strForLabel = helper.formatNumberShowStyle(currentDollor);\n        strForLabel = \"$ \" + strForLabel;\n        this.dollorLabel.string = strForLabel;\n    },\n    changeArea(areaIdForChange) {\n        var message = {\n            type: \"changeArea\",\n            areaId: areaIdForChange\n        }\n        message = JSON.stringify(message);\n        var networkMgr = cc.find(\"networkMgrNode\").getComponent(\"networkMgr\");\n        networkMgr.sendMessageToServer(message);\n    },\n    onReceiveMessage(data,type) {\n        if (type == \"catchFish\") {\n            var dataCenter = require(\"dataCenter\");\n            dataCenter.playerData.currentDollor = data;\n    \n            this.updateDollorLabelStr();\n        }\n        else if (type == \"changeArea\") {\n            this.stopRefreshFishes();\n            this.fishesNode.removeAllChildren();\n\n            var dataCenter = require(\"dataCenter\");\n            dataCenter.playerData = data.playerData;\n            dataCenter.neededFishesData = data.neededFishesData;\n            dataCenter.othersData = data.othersData\n\n            //performance of change area\n            this.updateDollorLabelStr();\n            var nextBackground = cc.instantiate(this.background);\n            nextBackground.color = this.backgroundColors[dataCenter.playerData.currentAreaLevel - 1];\n            \n            nextBackground.setPosition(0,this.background.getContentSize().height);\n            \n            var nodes = this.node.children\n            for (var index in nodes) {\n                var a = nodes[index];\n                a.zIndex = index;\n            }\n            nextBackground.zIndex = 1;\n            this.node.addChild(nextBackground);\n\n            var moveAction = cc.moveBy(2,cc.v2(0,-1 * this.background.getContentSize().height));\n            this.background.runAction(cc.sequence(moveAction,cc.removeSelf()));\n            var self = this\n            var finished = cc.callFunc(function(){\n                self.background = nextBackground\n                self.startRefreshFishes();\n            },self)\n\n            nextBackground.runAction(cc.sequence(moveAction,finished));\n        }\n    }\n});\n"]}